# -*- coding: utf-8 -*-
"""predict_stock_prices.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TlCNndykDaJNM2v7DQNS4LCfPpKlHIQG

# Reading market data from CSV file and preparing a training dataset and validation dataset.
"""

import pandas as pd
import numpy as np

df = pd.read_csv("BAJFINANCE.csv")
df.head()

df.set_index('Date', inplace=True)

"""# Plotting the target variable VWAP over time"""

df['VWAP'].plot()

df.shape

df.isna().sum()

df.dropna(inplace=True)

df.isna().sum()

df.shape

data = df.copy()

data.dtypes

data.columns

lag_features = ['High', 'Low' , 'Volume', 'Turnover', 'Trades']
window1 = 3
window2 = 7

for feature in lag_features:
  data[feature+'rolling_mean_3'] = data[feature].rolling(window=window1).mean()
  data[feature+'rolling_mean_7'] = data[feature].rolling(window=window2).mean()

for feature in lag_features:
  data[feature+'rolling_std_3'] = data[feature].rolling(window=window1).std()
  data[feature+'rolling_std_7'] = data[feature].rolling(window=window2).std()

data.head(4)

data.columns

data.shape

data.isna().sum()

data.dropna(inplace=True)

data.columns

ind_features = ['Highrolling_mean_3', 'Lowrolling_mean_3',
       'Volumerolling_mean_3', 'Turnoverrolling_mean_3',
       'Tradesrolling_mean_3', 'Highrolling_mean_7', 'Lowrolling_mean_7',
       'Volumerolling_mean_7', 'Turnoverrolling_mean_7',
       'Tradesrolling_mean_7', 'Highrolling_std_3', 'Highrolling_std_7',
       'Lowrolling_std_3', 'Lowrolling_std_7', 'Volumerolling_std_3',
       'Volumerolling_std_7', 'Turnoverrolling_std_3', 'Turnoverrolling_std_7',
       'Tradesrolling_std_3', 'Tradesrolling_std_7']

training_data = data[0:1800]
test_data = data[1800:]

training_data

!pip install pmdarima

import pmdarima
import sys
from pmdarima import auto_arima

import warnings
warnings.filterwarnings('ignore')

# from os import EX_CONFIG
model=auto_arima(y=training_data['VWAP'],exogenous=training_data[ind_features],trace=True)

model.fit(training_data['VWAP'],training_data[ind_features])

a = len(test_data)

forecast = model.predict(n_periods=a, X =test_data[ind_features])

test_data['Forecast_ARIMA']=forecast.values

test_data.columns

test_data[['VWAP','Forecast_ARIMA']].plot(figsize=(14,7))

"""# Checking the Accuracy of our model"""

from sklearn.metrics import mean_absolute_error , mean_squared_error

np.sqrt(mean_squared_error(test_data['VWAP'],test_data['Forecast_ARIMA']))

mean_absolute_error(test_data['VWAP'],test_data['Forecast_ARIMA'])

